{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/renderStatictics/renderStatistics.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Section","title","children","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","key","type","className","s","item","onClick","renderStatistics","Statistics","total","positivePercentage","Notification","message","App","state","good","props","neutral","bad","addFeedback","setState","prevState","countTotalFeedback","values","reduce","acc","value","countPositiveFeedbackPercentage","Math","round","this","Component","defaultProps","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"mQAEe,SAASA,EAAT,GAA4C,IAAD,IAAxBC,aAAwB,MAAhB,GAAgB,EAAZC,EAAY,EAAZA,SAC5C,OACE,gCACGD,GAAS,6BAAKA,IACdC,K,oBCsBQC,MAxBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,8BACGC,OAAOC,KAAKH,GAASI,KAAI,SAAAC,GAAG,OAC3B,wBAEEC,KAAK,SACLC,UAAWC,IAAEC,KACbC,QAAS,WACPT,EAAgBI,IALpB,mBAQMA,IAPCA,SCTA,SAASM,EAAiBX,GACvC,OAAOE,OAAOC,KAAKH,GAASI,KAAI,SAAAC,GAAG,OACjC,8BACGA,EADH,KACUL,EAAQK,KADVA,MCCG,SAASO,EAAT,GAIX,IAHFZ,EAGC,EAHDA,QAGC,IAFDa,aAEC,MAFO,EAEP,MADDC,0BACC,MADoB,EACpB,EACD,OACE,gCACGH,EAAiBX,GAClB,wCAAWa,KACX,oDAAuBC,EAAvB,UCXS,SAASC,EAAT,GAAyC,IAAD,IAAhBC,eAAgB,MAAN,GAAM,EACrD,OAAO,8BAAMA,I,ICIMC,E,4MAOnBC,MAAQ,CACNC,KAAM,EAAKC,MAAMD,KACjBE,QAAS,EAAKD,MAAMC,QACpBC,IAAK,EAAKF,MAAME,K,EAGlBC,YAAc,SAAAjB,GACZ,EAAKkB,UAAS,SAAAC,GAAS,sBAAQnB,EAAOmB,EAAUnB,GAAQ,O,EAG1DoB,mBAAqB,WACnB,OAAOxB,OAAOyB,OAAO,EAAKT,OAAOU,QAAO,SAACC,EAAKC,GAAN,OAAiBD,EAAOC,IAAQ,I,EAG1EC,gCAAkC,WAChC,IAAMlB,EAAQ,EAAKa,qBACnB,OAAOb,EAAQ,EAAImB,KAAKC,MAAO,EAAKf,MAAMC,KAAON,EAAS,KAAO,G,4CAGnE,WACE,IAAMA,EAAQqB,KAAKR,qBACnB,OACE,gCACE,cAAC9B,EAAD,CAASC,MAAM,wBAAf,SACE,cAAC,EAAD,CACEG,QAASkC,KAAKhB,MACdjB,gBAAiBiC,KAAKX,gBAG1B,cAAC3B,EAAD,CAASC,MAAM,aAAf,SACGgB,EAAQ,EACP,cAACD,EAAD,CACEZ,QAASkC,KAAKhB,MACdL,MAAOA,EACPC,mBAAoBoB,KAAKH,oCAG3B,cAAChB,EAAD,CAAcC,QAAQ,+B,GA5CDmB,aAAZlB,EACZmB,aAAe,CACpBjB,KAAM,EACNE,QAAS,EACTC,IAAK,GCLTe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,KAAO,iC","file":"static/js/main.e04b6094.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport default function Section({ title = '', children }) {\n  return (\n    <div>\n      {title && <h2>{title}</h2>}\n      {children}\n    </div>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <div>\n      {Object.keys(options).map(key => (\n        <button\n          key={key}\n          type=\"button\"\n          className={s.item}\n          onClick={() => {\n            onLeaveFeedback(key);\n          }}\n        >\n          {`${key}`}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.object.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","export default function renderStatistics(options) {\n  return Object.keys(options).map(key => (\n    <p key={key}>\n      {key}: {options[key]}\n    </p>\n  ));\n}\n","import PropTypes from 'prop-types';\nimport renderStatistics from '../renderStatictics/renderStatistics';\n\nexport default function Statistics({\n  options,\n  total = 0,\n  positivePercentage = 0,\n}) {\n  return (\n    <div>\n      {renderStatistics(options)}\n      <p>Total: {total}</p>\n      <p>Positive feedback: {positivePercentage}%</p>\n    </div>\n  );\n}\n\nStatistics.propTypes = {\n  options: PropTypes.object.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import PropTypes from 'prop-types';\nexport default function Notification({ message = '' }) {\n  return <div>{message}</div>;\n}\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\n\nexport default class App extends Component {\n  static defaultProps = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  state = {\n    good: this.props.good,\n    neutral: this.props.neutral,\n    bad: this.props.bad,\n  };\n\n  addFeedback = type => {\n    this.setState(prevState => ({ [type]: prevState[type] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((acc, value) => (acc += value), 0);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const total = this.countTotalFeedback();\n    return total > 0 ? Math.round((this.state.good / total) * 100) : 0;\n  };\n\n  render() {\n    const total = this.countTotalFeedback();\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.addFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {total > 0 ? (\n            <Statistics\n              options={this.state}\n              total={total}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            ></Statistics>\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FeedbackOptions_item__1hVW1\"};"],"sourceRoot":""}